"""All models

Revision ID: 13ac6ae346dc
Revises: 50827797275e
Create Date: 2025-05-16 01:38:00.815863

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '13ac6ae346dc'
down_revision = '50827797275e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'ORGANIZATION', name='role'), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_code', sa.String(length=6), nullable=True),
    sa.Column('verification_code_expiry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_account_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_account_username'), ['username'], unique=True)
        batch_op.create_index(batch_op.f('ix_account_verification_code'), ['verification_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_verification_code_expiry'), ['verification_code_expiry'], unique=False)

    op.create_table('industry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('admin_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('role_level', sa.Enum('ADMIN', 'SUPERADMIN', 'MODERATOR', name='adminrolelevel'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id')
    )
    op.create_table('follows',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('followed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('organization_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('proof_image', sa.String(length=255), nullable=True),
    sa.Column('proof_verification_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='verificationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id')
    )
    op.create_table('user_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('country', sa.String(length=80), nullable=True),
    sa.Column('city', sa.String(length=80), nullable=True),
    sa.Column('village', sa.String(length=80), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('identity_picture', sa.String(length=255), nullable=True),
    sa.Column('identity_verification_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='verificationstatus'), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('rank', sa.String(length=50), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('current_points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id')
    )
    op.create_table('opportunity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'FILLED', name='opportunitystatus'), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('application_link', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('opportunity_type', sa.Enum('VOLUNTEER', 'JOB', name='opportunitytype'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization_industry',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization_details.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'industry_id')
    )
    op.create_table('user_achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('badge_icon', sa.String(length=255), nullable=True),
    sa.Column('achievement_type', sa.Enum('GENERAL', 'LEVEL', 'RANKING', name='achievementtype'), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='level'), nullable=True),
    sa.Column('ranking', sa.Enum('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'FIFTH', name='ranking'), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_points_summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('period_type', sa.Enum('MONTH', 'SMONTH', 'YEAR', name='periodtype'), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_skills',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('job_opportunity',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('required_points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ),
    sa.PrimaryKeyConstraint('job_id'),
    sa.UniqueConstraint('job_id'),
    sa.UniqueConstraint('opportunity_id')
    )
    op.create_table('opportunity_participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='participantstatus'), nullable=True),
    sa.Column('applied_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opportunity_id', 'user_id', name='uq_opportunity_user')
    )
    op.create_table('opportunity_skills',
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('opportunity_id', 'skill_id')
    )
    op.create_table('user_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'opportunity_id', name='uq_user_opportunity_points')
    )
    op.create_table('volunteer_opportunity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('base_points', sa.Integer(), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opportunity_id')
    )
    op.create_table('opportunity_day',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('volunteer_opportunity_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Enum('SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', name='weekday'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['volunteer_opportunity_id'], ['volunteer_opportunity.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('volunteer_opportunity_id', 'day_of_week', name='uq_volunteeropportunity_day')
    )
    op.create_table('opportunity_ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['opportunity_participant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_day_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', name='attendancestatus'), nullable=False),
    sa.ForeignKeyConstraint(['opportunity_day_id'], ['opportunity_day.id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['opportunity_participant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_day_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['opportunity_day_id'], ['opportunity_day.id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['opportunity_participant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participant_evaluation')
    op.drop_table('participant_attendance')
    op.drop_table('opportunity_ratings')
    op.drop_table('opportunity_day')
    op.drop_table('volunteer_opportunity')
    op.drop_table('user_points')
    op.drop_table('opportunity_skills')
    op.drop_table('opportunity_participant')
    op.drop_table('job_opportunity')
    op.drop_table('user_skills')
    op.drop_table('user_points_summary')
    op.drop_table('user_achievement')
    op.drop_table('organization_industry')
    op.drop_table('opportunity')
    op.drop_table('user_details')
    op.drop_table('organization_details')
    op.drop_table('follows')
    op.drop_table('admin_details')
    op.drop_table('tag')
    op.drop_table('skill')
    op.drop_table('industry')
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_verification_code_expiry'))
        batch_op.drop_index(batch_op.f('ix_account_verification_code'))
        batch_op.drop_index(batch_op.f('ix_account_username'))
        batch_op.drop_index(batch_op.f('ix_account_email'))

    op.drop_table('account')
    # ### end Alembic commands ###
