"""admin,org,opp

Revision ID: df10100ffbd9
Revises: 9704d5678787
Create Date: 2025-04-20 14:18:49.743465

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "df10100ffbd9"
down_revision = "9704d5678787"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_achievement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("badge_icon", sa.String(length=255), nullable=True),
        sa.Column(
            "period_type",
            sa.Enum("MONTH", "SMONTH", "YEAR", name="type"),
            nullable=False,
        ),
        sa.Column("period_date", sa.Date(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_details.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_points",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("total_points", sa.Integer(), nullable=True),
        sa.Column("month", sa.String(length=7), nullable=True),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_details.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("last_login", sa.DateTime(), nullable=True)
        )

    with op.batch_alter_table("admin_details", schema=None) as batch_op:
        batch_op.alter_column(
            "name", existing_type=mysql.VARCHAR(length=100), nullable=False
        )
        batch_op.alter_column(
            "role_level",
            existing_type=mysql.VARCHAR(length=50),
            type_=sa.Enum(
                "ADMIN", "SUPERADMIN", "MODERATOR", name="adminrolelevel"
            ),
            existing_nullable=True,
        )

    with op.batch_alter_table("industry", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=True,
            )
        )

    with op.batch_alter_table("skill", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=True,
            )
        )

    with op.batch_alter_table("user_details", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("total_points", sa.Integer(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("current_points", sa.Integer(), nullable=True)
        )
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column("updated_at", sa.DateTime(), nullable=True)
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_details", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")
        batch_op.drop_column("current_points")
        batch_op.drop_column("total_points")

    with op.batch_alter_table("skill", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")

    with op.batch_alter_table("industry", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")

    with op.batch_alter_table("admin_details", schema=None) as batch_op:
        batch_op.alter_column(
            "role_level",
            existing_type=sa.Enum(
                "ADMIN", "SUPERADMIN", "MODERATOR", name="adminrolelevel"
            ),
            type_=mysql.VARCHAR(length=50),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "name", existing_type=mysql.VARCHAR(length=100), nullable=True
        )

    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.drop_column("last_login")

    op.drop_table("user_points")
    op.drop_table("user_achievement")
    # ### end Alembic commands ###
